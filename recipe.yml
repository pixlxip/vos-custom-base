name: Vanilla OS Custom Image Base
id: vos-custom-base
stages:
  - id: build
    base: ghcr.io/vanilla-os/nvidia-exp:main
    singlelayer: false
    labels:
      maintainer: self-maintained # Optionally, Replace this with your name
    args:
      DEBIAN_FRONTEND: noninteractive # Set the image environment as non-interactive

    # Commands to run first before building the modules
    runs:
      commands:
        - echo 'APT::Install-Recommends "1";' > /etc/apt/apt.conf.d/01norecommends

    modules:
      - name: init-setup
        type: shell
        commands:
          - lpkg --unlock
          - apt-get update

      # Put your custom actions below this comment

      - name: add-sid-sources
        type: shell
        commands:
          - mv /etc/sid.sources /etc/apt/sources.list.d/
          - mv /etc/apt/sources.list.d/vanilla-base.sources /etc/
          - apt update

      # Waydroid
      - name: uninstall-waydroid
        type: shell
        commands:
          - dkms uninstall waydroid-binder/1 -k $(cat /usr/share/vanilla/kernel-version)
          - dkms uninstall waydroid-ashmem/1 -k $(cat /usr/share/vanilla/kernel-version)
          - rm -f -r /sources/waydroid-modules
          - rm -f -r /usr/src/waydroid-binder-1
          - rm -f -r /usr/src/waydroid-ashmem-1
          - rm -f /usr/bin/waydroid
          - rm -f /usr/share/vso/apx/stacks/vso-waydroid.yaml
          - rm -f /etc/modules.load.d/waydroid.conf
          - rm -f /etc/udev/rules.d/99-waydroid.rules

      # Kernel
      - name: upgrade-kernel
        type: shell
        commands:
          - apt remove -y linux-image-amd64 linux-headers-amd64
          - apt install -t sid -y linux-image-amd64 linux-headers-amd64
          - rm -f /usr/share/vanilla/kernel-version
          - echo "$(ls -1 /usr/lib/modules | tail -n 1)" > /usr/share/vanilla/kernel-version

      # Mesa
      - name: upgrade-mesa
        type: shell
        commands:
          - apt install -t sid -y mesa-vulkan-drivers libgl1-mesa-dri libglx-mesa0 mesa-utils

      - name: remove-sid-sources
        type: shell
        commands:
          - rm /etc/apt/sources.list.d/sid.sources
          - mv /etc/vanilla-base.sources /etc/apt/sources.list.d/
          - apt update

      # Nvidia
      - name: nvidia-official-repo
        type: shell
        commands:
          - echo 'deb [signed-by=/usr/share/keyrings/nvidia-drivers.gpg] https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/ /' > /etc/apt/sources.list.d/nvidia-drivers.list
          - apt-get update

      - name: unhold-nvidia
        type: shell
        commands:
          - apt-mark unhold nvidia-kernel-open nvidia-driver nvidia-vaapi-driver nvidia-settings nvidia-persistenced nvidia-smi libnvidia-cfg1 libnvidia-glcore libnvidia-glvkspirv libnvidia-gpucomp libnvidia-fbc1 nvidia-container-toolkit

      - name: nvidia-official-driver
        type: shell
        commands:
          - apt-mark hold nvidia-kernel-open nvidia-driver nvidia-vaapi-driver nvidia-settings nvidia-persistenced nvidia-smi libnvidia-cfg1 libnvidia-glcore libnvidia-glvkspirv libnvidia-gpucomp libnvidia-fbc1 nvidia-container-toolkit
        modules:
          - name: update-nvidia
            type: apt
            source:
              packages:
                - nvidia-kernel-open
                - nvidia-driver
                - nvidia-vaapi-driver
                - nvidia-settings
                - nvidia-persistenced
                - cuda-drivers
                - libnvidia-cfg1
                - libnvidia-glcore
                - libnvidia-glvkspirv
                - libnvidia-gpucomp
                - libnvidia-fbc1
                - nvidia-container-toolkit

      # Cleanup
      - name: cleanup-custom
        type: shell
        commands:
          - apt remove -y zutty gnome-shell-extension-prefs
          - SUDO_FORCE_REMOVE=yes apt purge -y sudo
          - rm /etc/apt/sources.list.d/nvidia-drivers.list
          - apt remove -y git build-essential

      # Put your custom actions above this comment

      - name: set-image-name-abroot
        type: includes
        includes:
          - modules/80-set-image-abroot-config.yml

      - name: cleanup
        type: shell
        commands:
          - apt-get autoremove -y
          - apt-get clean
          - lpkg --lock

      - name: fsguard
        type: fsguard
        CustomFsGuard: false
        FsGuardLocation: "/usr/sbin/FsGuard"
        GenerateKey: true
        FilelistPaths: ["/usr/bin"]
        modules:
          - name: remove-prev-fsguard
            type: shell
            commands:
              - rm -rf /FsGuard
              - rm -f ./minisign.pub ./minisign.key
              - chmod +x /usr/sbin/init

      - name: cleanup2
        type: shell
        commands:
          - rm -rf /tmp/*
          - rm -rf /var/tmp/*
          - rm -rf /sources
